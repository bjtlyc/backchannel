class VotesController < ApplicationController
  # GET /votes
  # GET /votes.json
  def index
    @votes = Vote.all

    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @votes }
    end
  end

  # GET /votes/1
  # GET /votes/1.json
  def show
    @vote = Vote.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @vote }
    end
  end

  # GET /votes/new
  # GET /votes/new.json
  def new
    @vote = Vote.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @vote }
    end
  end

  # GET /votes/1/edit
  def edit
    @vote = Vote.find(params[:id])
  end

  # POST /votes
  # POST /votes.json
  def create
    @user = current_user
    if params[:ifpost] == "1"
    	post = Post.find(params[:post_id])
    #@vote = Vote.new(params[:vote])
    	@vote = post.votes.build(:user => @user )
    	@num = Vote.count( :conditions => { :post_id => params[:postid]})+1
    	post.update_attribute('votenum' , @num)
    else
	comment = Comment.find(params[:comment])
	@vote = comment.votes.build(:user=> @user)
    	post = Post.find(params[:post])
	@num = Vote.count(:conditions => { :comment_id => params[:comment_id] })+1
	comment.update_attribute('votenum', @num)
    end

    respond_to do |format|
      if @vote.save
	      if params[:ifpost] == "1"
        format.html { redirect_to @vote.post, notice: 'Vote was successfully created.' }
	      else
        format.html { redirect_to post, notice: 'Vote was successfully created.' }

	      end
        format.json { render json: @vote, status: :created, location: @vote }
      else
        format.html { render action: "new" }
        format.json { render json: @vote.errors, status: :unprocessable_entity }
      end
    end
  end

  # PUT /votes/1
  # PUT /votes/1.json
  def update
    @vote = Vote.find(params[:id])

    respond_to do |format|
      if @vote.update_attributes(params[:vote])
        format.html { redirect_to @vote, notice: 'Vote was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @vote.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /votes/1
  # DELETE /votes/1.json
  def destroy
    @vote = Vote.find(params[:id])
    @vote.destroy

    respond_to do |format|
      format.html { redirect_to votes_url }
      format.json { head :no_content }
    end
  end
end
